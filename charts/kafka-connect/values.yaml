# Default values for kafka-connect.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## Image Info
## ref: https://hub.docker.com/r/confluentinc/cp-kafka-connect
image:
  registry: docker.io
  repository: confluentinc/cp-kafka-connect
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  pullPolicy: IfNotPresent
imagePullSecrets:  []
nameOverride: ""
fullnameOverride: ""

## Kafka Connect standalone/distributed mode
## ref: https://docs.confluent.io/platform/current/connect/userguide.html#standalone-vs-distributed-mode
replicaCount: 1

## Kafka Connect Configuration
## ref: https://docs.confluent.io/platform/current/connect/references/allconfigs.html
heapOpts: -XX:MaxRAMPercentage=75.0 -XX:InitialRAMPercentage=50.0
keyConverter: io.confluent.connect.avro.AvroConverter
valueConverter: io.confluent.connect.avro.AvroConverter
storageReplicatorFactor: 3
pluginPath: /usr/share/java,/usr/share/confluent-hub-components
confluentSupportMetricsEnable: false
port: 8083

## Kafka Cluster Configuration
kafka:
  ## If true, kafka was installed under the same umbrella
  enabled: false
  replicaCount: 3
  ## If outside or custom kafka a bootstrap server is required
  bootstrapServers: PLAINTEXT://ks-kafka-headless:9092
  ## Kafka Broker Kerberos authentication
  ## ref: https://docs.confluent.io/platform/current/kafka/authentication_sasl/authentication_sasl_gssapi.html#kconnect-long
  kerberos:
    enabled: false
    serviceName:
    domain:

## Kerberos configs
kerberos:
  krb5Conf:
  keyTabSecret:
  jaasConf:

## Schema Registry Configuration
schema-registry:
  ## If true, schema-registry was installed under the same umbrella
  enabled: true
  ## If outside or custom a URL and port are required to connect. Remember to include the protocol http:// or https://
  url:

## Configure Liveness and Readiness Probes
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
livenessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
readinessProbe:
  enabled: true
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

## Configure Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
podSecurityContext:
  fsGroup: 1000

## Configure Container Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsUser: 1000
  runAsGroup: 1000
  capabilities:
    drop:
    - ALL

## Configure Resources for Containers
## ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
resources:
  limits:
    cpu: 1
    memory: 1400Mi
  requests:
    cpu: 250m
    memory: 512Mi
